---
- name: install james mail server in target server.
  # gather_facts: false
  gather_facts: true
  # hosts: localhost
  hosts: mail-server
  # vars_files:
  #   - config.cfg
  #   - vars/sec.yml
  # ansible-playbook --vault-id james@/opt/james.pwd  install-mail-server.yml
  vars:
    mail_ssl_secret: !vault |
      $ANSIBLE_VAULT;1.2;AES256;james
      62313637353138313962633931646333306633666634313630323234396231363737383865316162
      6464646663323137366232666261346232613637303631360a353061303932653239616462626432
      63316232623139333933306533313931613465636632656230306466383265306162346434653138
      3530616237333735390a353130303962663231373038383831373234396131343038653162666436
      61376532323738343637383630643932613134323566633864613532636163353330
    dkim_rsa: !vault |
      $ANSIBLE_VAULT;1.2;AES256;james
      38613330663230636665333630333333316336336536613265323966366538303334383530383665
      6462336231376236643163336166333030363034396332650a316365326131326165653066306136
      31326334616666646136656131633130353861323864303938663638336236616162666139303934
      3830636431356235640a363562396465356464383562326461333432313833373663393666363266
      35636433326436623338373165663462343736313963613765373764376437363863373366303761
      39366632316538656635366331636431323636623435306564316435383639393465363933633634
      39633938396337633461323131666638633237643732343038333630643336326164613933366332
      37656336633039323638646231383830383061633337383536326637336234353261626236623162
      62326430383334333663336335333465616263303162373161336165303662363438653431626164
      64636533343035363931303635303536353465613432333631373364353137353664646431383466
      38656237393138363435303034316562333935626338666537396463313834346339313861383163
      37393131323038326435343364336162353632353136363261376563643862653765306431323338
      64643134633361353338326663646435623965383136613034313137663763323261623365323032
      32636433613939633834626264356662373536393233336333626664353037653065366535376232
      31366136623134613334366535616335376366346237616630313133346530343234356361626564
      31633537313238363365623031613266303038663135343862313561613066636166656439306131
      31313639663134373865643930333364616164376630663564636362616332393664346266336135
      36656236383933316661353738376234323532313833393563303662376361333664356361653938
      61343437363462613036326133386162323263333266663935396138316634643163313461323465
      30616563393232326530316433616331363031353532356262363865393730643763393531663937
      36663334616432623165613765653933643931386538356539386363616163626563396336396332
      33626537313463623165323039353339326334633931643263383836306233336363316566386237
      39666434306131383661386363366264306134353334383861653436393833313839306638383564
      31336663353861343237666462363663323034393061613462323530663834383662616130306430
      34326530663731616639323861353264373333376631643462333838656634333164383631636133
      66613935326236616237666636623265636234636233363765376163376433613231356430343264
      64663733313263663765376265363531393435353365376232303531646435363936623533373633
      33396637363739613738353638356562383966333266303735643932313033373335333065653839
      35643230636438313966313161316262633436376433313035643830333431363531316536623332
      30316436646137613764313265316636316561626532633266316530383139626566393938663035
      30663564643563343361633231613436383439326536393137353130343535393537393733353636
      33663866623562323438383738656365653162386661383632326330343030663331613739373830
      33356265613135666638633664336530623936323932626231613032653562386464633731643534
      65613635626464373362613230373864356264316465366233363237333036373631656635613930
      34303462306235666564656531363430386239396136343032633164353730363262663836303065
      35306633646330396661623563346162336237316431363034356335633763636162666531373035
      34646366646439626236383239373862303163383261336438333231336665393130346237393365
      61326563393537633332323262616161346534653336373164393132653466653231663436626133
      32303036346432366637633438343338306332333465653931353039396564646562633161666562
      64656662653762393634653263346234323565363137386562363932623964386133363831643338
      34393933373061353634366466306165623630666463646463646133376363373439353237366134
      66336338316338323539633636376662343562353964376434343739366364653663613734333439
      37313239326436303836666232623839323639343334363330386535646231333439613366653837
      38653638633833656234396235613064626436326537633664366166386462633461376561396435
      36626666336139663335333839653136353166666666396430356466346134336130616564313635
      33623331613962613731343731633464616131383633373064623663323436666262656464663334
      30666638366333336536626437623533363966396137633265333364613737653632616535613066
      30313666333439373033323536356134343439326162303866656661336637613038376564353034
      3063
    servicebus_conn: !vault |
      $ANSIBLE_VAULT;1.2;AES256;james
      63326636343833333732313465616238633036336431386164363063646261343032376661303437
      3262353734313262373131613863623166616238396331610a656634326435393833306339633138
      33336463643566636561326236333637336232363330653537303135643363636634343838643062
      6530326564636335660a613332646133663434316437323236303330373935636539353464373736
      35386261623936666338386131313464623463333738613263666230633666623439313630643561
      33353137376537663438663433643963346661383739623665663831643064323665663434346433
      63643238326639353835633530336533393261656431383861626565333037393265343263316138
      30366231376136663132366263623965653437313861623936393562393465613866656564663731
      66646539323664633866653538313939333165343730316466323537623264663233633565643934
      65386634326365623465343239633965316438303666303865666636656639653361616132366335
      30363633653765326333373635316161393064386131383761636662643935616162303264636665
      38623831343734643135353131666334386131343534386431313039373430326537323431623139
      65333132653335343836366539353934663262643264613033363066666632396230
    mail_port: "25"
    app_zip_file: server/app/target/james-server-app-3.5.0-app.zip
    deploy_dir: /opt/james
    app_folder_name: james-server-app-3.5.0
    is_remote: "{{ inventory_hostname != 'localhost' }}"
  tasks:
    - name: os environment
      debug:
        msg: "{{ ansible_facts['distribution_major_version'] }}"
    - name: current host name.
      debug:
        var: inventory_hostname
    - name: Set python3 as the interpreter to use
      set_fact:
        ansible_python_interpreter: /usr/bin/python
      when: ansible_facts['distribution_major_version'] | int < 20
    - name: install dependencies.
      block:
        - name: what's ansible_python_interpreter?
          debug:
            var: ansible_python_interpreter
        - name: install python-pip
          apt:
            pkg:
              - python-pip
          when: ansible_facts['distribution_major_version'] | int < 20
        - name: install packages.
          apt:
            pkg:
              - expect
              - unzip
              - openjdk-11-jre-headless
              - python3-pip
            update_cache: "{{ 'yes' if ansible_facts['distribution_major_version'] | int >= 20 else 'no' }}"
        - name: Install pexpect python package
          pip:
            name: pexpect
      when: inventory_hostname != "localhost"
    - name: create deploy directory
      file:
        path: "{{ deploy_dir }}"
        state: directory
        mode: "0755"
      when: inventory_hostname != "localhost"
    - name: Extract app.zip into current directory
      unarchive:
        src: "{{ app_zip_file }}"
        dest: "{{ deploy_dir }}"
        remote_src: "{{ is_remote }}"
    - name: adjust firewall.
      block:
        - name: Deny everything and enable UFW
          community.general.ufw:
            state: enabled
            policy: allow
        - name: allow open ssh.
          community.general.ufw:
            rule: allow
            name: OpenSSH
        - name: Allow all access to mail port
          community.general.ufw:
            rule: allow
            port: "{{ mail_port }}"
            proto: tcp
        - name: Allow all access to 587 port
          community.general.ufw:
            rule: allow
            port: "587"
            proto: tcp
        - name: Allow all access to 993 port
          community.general.ufw:
            rule: allow
            port: "993"
            proto: tcp
      when: inventory_hostname != "localhost"
    - name: generate key if not exists.
      block:
        - name: checkout keystore file.
          stat:
            path: "{{ keystore }}"
          register: keystore_result
        - name: generate key
          command: 'keytool -genkeypair -dname "CN=resp.me, OU=organizationUnit, O=organizationName, L=localityName,S=stateName, C=EE" -alias james -keystore {{ keystore }} -keypass {{ mail_ssl_secret }} -storepass {{ mail_ssl_secret }} -storetype jks'
          # no_log: true
          when: keystore_result.stat.exists == false
      vars:
        keystore: "{{ deploy_dir + '/' + app_folder_name + '/conf/keystore' }}"

    # - name: generate key.
    #   expect:
    #     command: "keytool -genkey -alias james -keyalg RSA -keystore {{ keystore }}"
    #     echo: true
    #     responses:
    #       (?i)password: "{{ mail_ssl_secret }}"
    #       new password: "{{ mail_ssl_secret }}"
    #       \[Unknown\]:
    #         - libo jiang
    #         - unit
    #         - org
    #         - city
    #         - province
    #         - EE
    #       \[no\]: "yes"
    #     chdir: ~
    #     creates: "{{ keystore }}"
    #   no_log: true
    #   vars:
    #     keystore: "{{ deploy_dir + '/' + app_folder_name + '/conf/keystore' }}"
    - name: stop james
      shell: ./james stop
      args:
        chdir: "{{ deploy_dir + '/' + app_folder_name + '/bin' }}"

    - name: adjust imapserver.xml
      block:
        - name: change port to 993 and enable tls
          lineinfile:
            path: "{{ iampserver_file }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
          with_items:
            - {
                regexp: "<bind>0.0.0.0:143</bind>",
                line: "<bind>0.0.0.0:993</bind>",
              }
            - {
                regexp: '<tls socketTLS="false" startTLS="false">',
                line: '<tls socketTLS="false" startTLS="true">',
              }
            - {
                regexp: "<secret>yoursecret</secret>",
                line: "<secret>{{ mail_ssl_secret }}</secret>",
              }
      vars:
        iampserver_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/imapserver.xml' }}"
      no_log: true
    - name: adjust smtpserver.xml
      block:
        - name: enable tls
          lineinfile:
            path: "{{ smtpserver_file }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
          with_items:
            # - {
            #     regexp: '<tls socketTLS="false" startTLS="false">',
            #     line: '<tls socketTLS="false" startTLS="true">',
            #   }
            - {
                regexp: "<secret>yoursecret</secret>",
                line: "<secret>{{ mail_ssl_secret }}</secret>",
              }
        - name: add 587
          replace:
            path: "{{ smtpserver_file }}"
            regexp: (</smtpservers>)
            replace: |
              <smtpserver enabled="true">
                <jmxName>smtpserver-authenticated</jmxName>
                <bind>0.0.0.0:587</bind>
                <connectionBacklog>200</connectionBacklog>
                <tls socketTLS="false" startTLS="true">
                    <keystore>file://conf/keystore</keystore>
                    <secret>{{ mail_ssl_secret }}</secret>
                    <provider>org.bouncycastle.jce.provider.BouncyCastleProvider</provider>
                    <algorithm>SunX509</algorithm>
                </tls>
                <connectiontimeout>360</connectiontimeout>
                <connectionLimit>0</connectionLimit>
                <connectionLimitPerIP>0</connectionLimitPerIP>
                <!--
                  Authorize only local users
                -->
                <authRequired>true</authRequired>
                <authorizedAddresses>0.0.0.0/0</authorizedAddresses>
                <!-- Trust authenticated users -->
                <verifyIdentity>false</verifyIdentity>
                <maxmessagesize>0</maxmessagesize>
                <addressBracketsEnforcement>true</addressBracketsEnforcement>
                <smtpGreeting>JAMES Linagora's SMTP awesome Server</smtpGreeting>
                <handlerchain>
                    <handler class="org.apache.james.smtpserver.fastfail.ValidRcptHandler"/>
                    <handler class="org.apache.james.smtpserver.CoreCmdHandlerLoader"/>
                </handlerchain>
              </smtpserver>
              \1
      vars:
        smtpserver_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/smtpserver.xml' }}"
      no_log: true
    - name: adjust domainlist.xml
      block:
        - name: add resp.me
          replace:
            path: "{{ domainlist_file }}"
            regexp: (<domainlist class="org.apache.james.domainlist.jpa.JPADomainList">)
            replace: |
              \1  
              <domainnames>
                <domainname>resp.me</domainname>
              </domainnames>
        - name: disable auto detect.
          replace:
            path: "{{ domainlist_file }}"
            regexp: <autodetect>true</autodetect>
            replace: <autodetect>false</autodetect>
        - name: disable auto detect.
          replace:
            path: "{{ domainlist_file }}"
            regexp: <autodetectIP>true</autodetectIP>
            replace: <autodetectIP>false</autodetectIP>
        - name: remove default domain.
          replace:
            path: "{{ domainlist_file }}"
            regexp: <defaultDomain>localhost</defaultDomain>
            replace: <defaultDomain>resp.me</defaultDomain>
      vars:
        domainlist_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/domainlist.xml' }}"
    - name: adjust mailetcontainer.xml
      block:
        - name: insert dkim
          replace:
            path: "{{ mailetcontainer_file }}"
            regexp: (<mailet match="All" class="RemoteDelivery">)
            replace: |
              <mailet match="All" class="org.apache.james.jdkim.mailets.ConvertTo7Bit"/>
              <mailet match="All" class="org.apache.james.jdkim.mailets.DKIMSign">
                <signatureTemplate>v=1; s=1603851017.resp; d=resp.me; h=From:To:Message-ID:Subject:MIME-Version:Content-Type; a=rsa-sha256; bh=; b=;</signatureTemplate>
                <privateKey>
                  {{ dkim_rsa }}
                </privateKey>
              </mailet>
              \1
        - name: insert tohttp mailet.
          replace:
            path: "{{ mailetcontainer_file }}"
            regexp: (<mailet match="RecipientIsLocal" class="AddDeliveredToHeader"/>)
            replace: |
              \1
              <mailet match="RecipientIsLocal" class="org.apache.james.custom.mailets.ToHttp">
                <servicebusConn>{{ servicebus_conn }}</servicebusConn>
                <passThrough>false</passThrough>
              </mailet>
        - name: replace /var/mail dir.
          replace:
            path: "{{ mailetcontainer_file }}"
            regexp: file://var/mail
            replace: "file://{{ deploy_dir }}/var/mail"
        - name: remove RemoteAddrNotInNetwork block
          replace:
            path: "{{ mailetcontainer_file }}"
            after: <!-- should\) disable this matcher/mailet pair. -->
            before: <!-- Attempt remote delivery using the specified repository for the spool, -->
            regexp: "(^.+$)"
            replace: '<!-- \1 -->'
        - name: create mail directory
          file:
            path: "{{ deploy_dir }}/var/mail"
            state: directory
            mode: "0755"
      vars:
        mailetcontainer_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/mailetcontainer.xml'}}"
    - name: create store directory
      file:
        path: "{{ deploy_dir }}/var/store/maildir"
        state: directory
        mode: "0755"
    - name: adjust james-database.properties
      block:
        - name: change derby database path.
          replace:
            path: "{{ james_database_file }}"
            regexp: database.url=jdbc:derby:../var/store/derby;create=true
            replace: "database.url=jdbc:derby:{{ deploy_dir }}/var/store/derby;create=true"
      vars:
        james_database_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/james-database.properties'}}"
    - name: adjust mailbox-maildir.properties
      block:
        - name: change maildir folder.
          replace:
            path: "{{ mailbox_maildir_file }}"
            regexp: maildir.folder=../var/store/maildir/%domain/%user
            replace: "maildir.folder={{ deploy_dir }}/var/store/maildir/%domain/%user"
      vars:
        mailbox_maildir_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/mailbox-maildir.properties'}}"
    - name: adjust wrapper.conf file
      block:
        - name: change wrapper.conf with lineinfile
          lineinfile:
            path: "{{ wrapper_conf_file }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
          with_items:
            - {
                regexp: wrapper.logfile.maxsize=0,
                line: wrapper.logfile.maxsize=10m,
              }
            - {
                regexp: wrapper.logfile.maxfiles=0,
                line: wrapper.logfile.maxfiles=20,
              }
      vars:
        wrapper_conf_file: "{{ deploy_dir + '/' + app_folder_name + '/conf/wrapper.conf'}}"

    - name: start james
      shell: ./james start
      args:
        chdir: "{{ deploy_dir + '/' + app_folder_name + '/bin' }}"
# cat /etc/letsencrypt/live/resp.me/*.pem > temp.pem
# openssl pkcs12 -export -out temp.pkcs12 -in temp.pem -passin pass: -passout pass:
# keytool -genkey -keyalg RSA -alias tempalias -keystore keystore.ks -storepass 123456 -keypass 123456 -dname "CN=resp.me, OU=organizationUnit, O=organizationName, L=localityName,S=stateName, C=EE"
# keytool -delete -alias tempalias -keystore keystore.ks -storepass 123456
# keytool -v -importkeystore -srckeystore temp.pkcs12 -destkeystore keystore.ks -deststoretype JKS -storepass 123456 -srcstorepass ""
